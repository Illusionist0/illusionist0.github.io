[{"title":"CPP笔记01","path":"/notes/cpp1.html","content":"第一章 预备知识编译、链接c（c++）程序的生成过程： 编写源代码-&gt;编译-&gt;链接 。 对应的各个阶段处理的文件的扩展名为： .c或.cpp-&gt;.obj-&gt;.exe。 何为编译？ 12345首先我们要明白两个概念，源程序和目标程序。源程序：是指用源语言写的，有待翻译的程序，如我们自己写的一段c++代码，这段代码只有我们自己能看懂，计算机是不懂，计算机只能理解二进制。目标程序：源程序通过翻译程序加工以后生成的机器语言程序。这是计算机可以理解的语言。把源程序转化为目标程序的操作就叫做编译。 何为链接？ 12345C语言代码经过编译以后，会变成了二进制形式的目标文件（Object File）--- 对于 Visual C++，目标文件的后缀是.obj，对于 GCC，目标文件的后缀是.o。但此时的代码还不能运行起来。 因为它还需要和系统提供的组件（比如标准库）结合起来，这些组件都是程序运行所必须的。 例如我们要在屏幕中输出字符，这必须调用系统提供的库才能够实现。这就是链接，经过链接才会生成 可执行程序 （如 win 平台上的exe） 总结 1234不管我们编写的代码有多么简单，都必须经过「编译 --&gt; 链接」的过程才能生成可执行文件：编译就是将我们编写的源代码“翻译”成计算机可以识别的二进制格式，它们以目标文件的形式存在；链接就是一个“打包”的过程，它将所有的目标文件以及系统组件组合成一个可执行文件。 何为编译程序？ 123456789计算机并不能直接地接受和执行用高级语言编写的源程序，源程序在输入计算机时，通过&quot;编译程序&quot;翻译成机器语言形式的目标程序。翻译程序有两种：一种是编译程序，它将高级语言源程序一次性全部翻译成目标程序，每次执行程序时，只要执行目标程序。如 C（c++）程序的生成要经过： 编写源代码-&gt;编译-&gt;链接；另一种是解释程序，它的执行过程是翻译一句执行一句，并且不会生成目标程序。如JavaScript、Python等。编译程序与解释程序最大的区别之一在于前者生成目标代码，而后者不生成；此外，前者产生的目标代码的执行速度比解释程序的执行速度要快。 除此以外，汇编程序也是一种语言翻译程序，它把汇编语言源程序翻译成机器语言程序，它是为低级语言服务的。解释程序和编译程序是为高级语言服务的。 java是一种半编译、半解释执行的语言？123对于C和C++，它们经过一次编译之后，可以由操作系统直接执行，所以它们是编译型语言。而Java不一样，它首先由编译器编译成.class文件，然后在通过JVM从class文件中读一行解释执行一行，所以它是解释型的语言。也正是由于java对于多种不同的操作系统有不同的JVM，所以实现了真正意义上的跨平台。","tags":[null,null],"categories":[null]},{"title":"CPP笔记03","path":"/notes/cpp3.html","content":"第三章 处理数据大括号初始化{}初始化&#x3D;0 整型选择仅当有大型数组时，才有必要使用short 通用字符\\U \\u C++11 新增的类型char16_tchar32_t const限定符C++11增加autoauto不是为了简单类型推导存在的，是为了复杂类型推导而存在的 课后习题 c++为什么有多种整形？1因为不同整型有着不同的存储范围，为不同规模的数据准备","tags":[null,null],"categories":[null]},{"title":"CPP笔记06","path":"/notes/cpp6.html","content":"第六章 分支语句和逻辑运算符 if if-else &amp;&amp; || ! 与或非 逻辑表达式 注意短路原则 cctype 比如isspace(),ispunct(),isalpha(),isalnum(),isdigit() a?b:c等于if(a)b else c switch语句 break continue 文件IO写文件 12345678910ofstream outFile;//代替osofstream fout;//代替osoutFile.open(&quot;xxx.txt&quot;);char filename[50];cin&gt;&gt;filename;fout.open(filename);int a=1;outFile&lt;&lt;a;char line[90]=&quot;xx..(90)&quot;;fout&lt;&lt;line&lt;&lt;endl; 读文件 12345678910ifstream inFile;//代替inifstream fin;//代替ininFile.open(&quot;xxx.txt&quot;);char filename[50];cin&gt;&gt;filename;fout.open(filename);int a;inFile&gt;&gt;a;// read a numberchar line[90];fin.getline(line,90);//read a line","tags":[null,null],"categories":[null]},{"title":"CPP笔记02","path":"/notes/cpp2.html","content":"第二章 开始学习C++名称空间1using namespace std; 是一种偷懒做法，使得全部名称可用，可以换成 1using std::cout; 头文件名c++新式风格 没有扩展名加上前缀c C++11 新特性原始（raw）字符串可包含回车 C++和C有一项不寻常的特性可以连续使用赋值运算符 123int a,b,c;a=b=c=10;赋值从右向左进行，10首先赋给c，c的值赋给b,b的值赋给a 课后习题 c++程序的模块是什么？12345678叫函数。 为什么呢？ 由于函数创建Ｃ＋＋程序的模块，对于Ｃ＋＋的ＯＯＰ至关重要。 函数是一组一起执行一个任务的语句。每个 C++ 程序都至少有一个函数，即主函数 main() ，所有简单的程序都可以定义其他额外的函数。甚至也可以是一个函数，只要它完成一个功能，它就可以视为一个模块。 而C++的模块一般是指一组函数的集合，来实现某一领域特定的功能。表现形式可以是封装在dll中的一组接口，也可以是在某个namespace下的一组API等等，主要是一个逻辑概念。 这样看来，模块是指完成一个功能的函数集合，所以函数必不可少。 还有一种说法：模块是一个比较模糊的概念。在BS的《The C++ Programming Language Special 3rd Edition》中，把一个名字空间视为一个模块。 所以说无需太对模块的概念过于关注，不同的地方往往需要结合上下文进行理解，不用过于在意其定义。","tags":[null,null],"categories":[null]},{"title":"CPP笔记04","path":"/notes/cpp4.html","content":"第四章 复合类型 c++提供了一种数组替代品，模板类vector c++11新增模板类array c++11字符串初始化 1允许将列表初始化用于C风格字符串和string对象 c++11结构初始化 1与数组一样，c++11也支持将列表初始化用于结构，=号可选 c++11增加了作用域内枚举 new和delete 1234567int *p =new int;delete p;//动态数组int *p=new int[10];delete [] p;//不要使用delete释放不是new分配的内存，以及反复delete配对使用，否则可能造成内存泄漏 对指针解除引用 *p or p[0] 分配内存1234567三种方式1.自动存储 存储到栈中2.静态存储 static3.动态存储 管理了一个内存池，自由存储空间或堆","tags":[null,null],"categories":[null]},{"title":"CPP笔记07","path":"/notes.html","content":"第七章 函数——C++的编程模块 函数原型放在函数头，不需要提供变量名，有类型列表就够了 原型确保编译器正确处理函数返回值，检查使用的参数数目是否正确，检查使用的参数类型是否正确","tags":[null,null],"categories":[null]},{"title":"CPP笔记05","path":"/notes/cpp5.html","content":"第五章 循环和关系表达式for循环123for(a;b;c)&#123; loop;&#125; ++、–（前缀和后缀）++a;&#x2F;&#x2F;先自增再对a进行运算 a++;&#x2F;&#x2F;先对a进行运算再自增 组合赋值a&#x3D;x;&#x2F;&#x2F;即a&#x3D;ax 逗号运算符,一般用于两个表达式或者连续赋值之间 关系表达式 &lt; &#x3D;&#x3D; &lt;&#x3D; &gt;&#x3D; &#x3D;&#x3D;和&#x3D;的区别&#x3D;是赋值，&#x3D;&#x3D;是比较 while123while(condition)&#123; loop;&#125; do while123do&#123; loop;&#125;while(condition);","tags":[null,null],"categories":[null]}]